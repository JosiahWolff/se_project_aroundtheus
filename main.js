!function(){"use strict";class e{constructor(e,t,s){this._cardData=e,this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s,this._cardTemplate=document.querySelector(t).content,this._cardElement=this._cardTemplate.querySelector(".cards__card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector("#card-image"),this._cardTitleEl=this._cardElement.querySelector("#card-title"),this._likeButton=this._cardElement.querySelector("#heart-image"),this._deleteButton=this._cardElement.querySelector("#trash-image")}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._likeButton.classList.toggle("heart_active")})),this._deleteButton.addEventListener("click",(()=>{this._cardElement.remove(),this._cardElement=null})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this._cardData)}))}getCardElement(){return this._setEventListeners(),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close-button"),this._handleEscapeClose=this._handleEscapeClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeClose)}_handleEscapeClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===this._popupElement||e.target.classList.contains("modal__close-button"))&&this.close()}))}}var r=class extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){this._popupForm.reset(),super.close()}};const n=document.querySelector("#profile-edit-modal"),o=document.querySelector("#add-card-modal"),i=o.querySelector("#add-card-form"),a=(document.querySelector("#profile-title"),document.querySelector("#profile-subtitle"),document.querySelector("#profile-title-input")),l=document.querySelector("#profile-subtitle-input"),c=(n.querySelector("#modal-form"),document.querySelector("#card-template").content.firstElementChild,document.querySelector("#cards"),i.querySelector("#card-title-input"),i.querySelector("#card-url-input"),document.querySelector("#modal-preview-image"),document.querySelector("#modal-caption"),document.querySelector("#cardPreviewModal")),u=document.querySelector("#profile-edit-button"),d=(n.querySelector("#modal-close"),document.querySelector("#profile__button")),m=(o.querySelector("#modal-card-close"),c.querySelector("#card-preview-close-button"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),_=new t(m,document.querySelector("#modal-form")),p=new t(m,document.querySelector("#add-card-form")),h=new r("#add-card-modal",(function(e){const t={name:e.title,link:e.url};y.addItem(t),h.close(),p.resetValidation()}));h.setEventListeners();const E=new class extends s{constructor(e){super({popupSelector:e}),this._imageElement=this._popupElement.querySelector("#modal-preview-image"),this._titleElement=this._popupElement.querySelector("#modal-caption")}open(e,t,s){this._imageElement.src=e,this._imageElement.alt=t,this._titleElement.textContent=s,super.open()}}("#cardPreviewModal");E.setEventListeners();const S=new r("#profile-edit-modal",(function(e){v.setUserInfo(e.title,e.subtitle)}));S.setEventListeners();const v=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}}(".profile__title",".profile__subtitle"),y=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this.addItem(e)}))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:function(t){return new e(t,"#card-template",f).getCardElement()}},".cards");function f(e){E.open(e.link,e.name,e.name)}u.addEventListener("click",(()=>{const{name:e,job:t}=v.getUserInfo();a.value=e,l.value=t,_.resetValidation(),S.open()})),d.addEventListener("click",(()=>{h.open()})),y.renderItems(),_.enableValidation(),p.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,