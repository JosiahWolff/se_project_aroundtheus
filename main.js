!function(){"use strict";class e{constructor(e){this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__close-button"),this._handleEscapeClose=this._handleEscapeClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeClose)}_handleEscapeClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===this._popupElement||e.target.classList.contains("modal__close-button"))&&this.close()}))}}const t=document.querySelector("#profile-edit-modal"),s=document.querySelector("#add-card-modal"),r=s.querySelector("#add-card-form"),i=(document.querySelector("#profile-title"),document.querySelector("#profile-subtitle"),document.querySelector("#profile-title-input")),o=document.querySelector("#profile-subtitle-input"),n=(t.querySelector("#modal-form"),document.querySelector("#card-template").content.firstElementChild,document.querySelector("#cards"),r.querySelector("#card-title-input"),r.querySelector("#card-url-input"),document.querySelector("#modal-preview-image"),document.querySelector("#modal-caption"),document.querySelector("#cardPreviewModal")),a=document.querySelector("#profile-edit-button"),l=(t.querySelector("#modal-close"),document.querySelector("#profile__button")),c=(s.querySelector("#modal-card-close"),n.querySelector("#card-preview-close-button"),document.querySelector("#avatar-edit-button")),d={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class u{constructor(e,t,s,r,i){this._cardData=e,this._name=e.name,this._link=e.link,this.id=e._id,this.isLiked=e.isLiked,this._cardSelector=t,this._handleLikeClick=s,this._handleDeleteClick=r,this._handleImageClick=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".cards__card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._likeButton=this._cardElement.querySelector("#heart-image"),this._deleteButton=this._cardElement.querySelector("#trash-image"),this._cardElement.querySelector(".cards__title").textContent=this._name,this._cardImage=this._cardElement.querySelector("#card-image"),this._cardImage.setAttribute("src",this._link),this._cardImage.setAttribute("alt",this._name),this._setEventListeners(),this._renderLikes(),this._cardElement}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._likeButton.classList.toggle("heart_active")})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._link,this._name)}))}updateLikeStatus(e){this.isLiked=e,this._renderLikes()}_renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}removeCard(){this._cardElement.remove(),this._cardElement=null}getId(){return this.id}}class h{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this.toggleButtonState()}}class _ extends e{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._saveButton=this._popupForm.querySelector(".modal__save-button"),this._saveButtonText=this._saveButton.textContent}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){this._popupForm.reset(),super.close()}setLoading(e){this._saveButton.textContent=e?"Saving...":this._saveButtonText}}class m{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}class p{constructor(e,t,s){this._name=document.querySelector(e),this._description=document.querySelector(t),this._userAvatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,description:this._description.textContent}}setUserInfo(e){this._name.textContent=e.name,this._description.textContent=e.about}setUserAvatar(e){this._userAvatar.src=e}}const v=new h(d,document.querySelector("#modal-form")),S=new h(d,document.querySelector("#add-card-form"));function E(e){return new u(e,"#card-template",q,I,((e,t)=>{C.open(e,t)})).getView()}new p(".profile__title",".profile__subtitle");const f=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}updateUserInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>this._checkResponse(e)))}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>this._checkResponse(e)))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>this._checkResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}loadPageContent(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"0f915c02-d173-4ea0-aefb-dc32641e7138","Content-Type":"application/json"}});let y;f.loadPageContent().then((e=>{let[t,s]=e;b.setUserAvatar(s.avatar),b.setUserInfo({name:s.name,about:s.about,id:s._id}),y=new m({items:t,renderer:e=>{y.addItem(E(e))}},".cards"),y.renderItems()})).catch((e=>{console.error(e)}));const b=new p(".profile__title",".profile__subtitle",".profile__image"),L=new _("#add-card-modal",(function(e){L.setLoading(!0);const t={name:e.title,link:e.url};f.addCard(t).then((e=>{y.addItem(E(e)),L.close()})).catch((e=>{console.error(e)})).finally((()=>L.setLoading(!1,"Create")))}));L.setEventListeners(),l.addEventListener("click",(()=>{S.resetValidation(),L.open()}));const g=new _("#profile-edit-modal",(function(e){g.setLoading(!0),f.updateUserInfo(e.title,e.subtitle).then((e=>{b.setUserInfo(e),g.close()})).catch((e=>{console.error(e)})).finally((()=>g.setLoading(!1,"Save")))}));g.setEventListeners(),a.addEventListener("click",(()=>{const e=b.getUserInfo();i.value=e.name,o.value=e.description,v.resetValidation(),g.open()}));const k=new _("#avatar-image-modal",(function(e){k.setLoading(!0),f.updateAvatar(e.avatar).then((e=>{b.setUserAvatar(e.avatar),k.close()})).catch((e=>{console.error(e)})).finally((()=>{k.setLoading(!1,"Save")}))}));k.setEventListeners(),c.addEventListener("click",(()=>{w["edit-avatar-form"].resetValidation(),k.open()}));const C=new class extends e{constructor(e){super(e),this._image=this._popupElement.querySelector("#modal-preview-image"),this._caption=this._popupElement.querySelector("#modal-caption")}open(e,t){super.open(),this._image.src=e,this._image.alt=t,this._caption.textContent=t}}("#cardPreviewModal");function q(e){e.isLiked?f.unlikeCard(e.getId()).then((t=>{e.updateLikeStatus(t.isLiked)})).catch(console.error):f.likeCard(e.getId()).then((t=>{e.updateLikeStatus(t.isLiked)})).catch((e=>{console.error(e)}))}C.setEventListeners();const B=new class extends e{constructor(e){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._saveButton=this._popupForm.querySelector(".modal__save-button"),this._saveButtonText=this._saveButton.textContent}setLoading(e){this._saveButton.textContent=e?"Deleting...":this._saveButtonText}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()})),super.setEventListeners()}}("#delete-card-modal");function I(e){B.open(),B.setSubmitAction((()=>{B.setLoading(!0),f.deleteCard(e.id).then((()=>{B.close(),e.removeCard()})).catch((e=>{console.error(e)})).finally((()=>{B.setLoading(!1,"Yes")}))})),B.open()}B.setEventListeners();const w={};(e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((t=>{const s=new h(e,t),r=t.getAttribute("name");w[r]=s,s.enableValidation()}))})(d)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,